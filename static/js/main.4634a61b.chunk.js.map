{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Notifictions/Notification.module.css","Main_section.module.css","Components/Statistics/Statistics.jsx","Components/FeedbackOptions/Feedbackoptions.jsx","Components/Section/Section.jsx","Components/Notifictions/Notification.jsx","App.js","index.js"],"names":["module","exports","StatisticsHandler","good","neutral","bad","total","totalPositive","className","styles","stat_name","stat_item","FeedbackOptions","options","onLeaveFeedback","map","option","feedbackBtn","onClick","Section","title","children","style","section","Notifications","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","main_contatiner","prevGood","prevNeutral","prevBad","Notification","Statistics","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,UAAY,gC,kBCAxED,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,iBCA3DD,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,gBAAkB,wC,2GCuBrBC,EApBW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACtD,OACE,qBAAIC,UAAWC,IAAOC,UAAtB,UACE,qBAAIF,UAAWC,IAAOE,UAAtB,mBAAwCR,KACxC,qBAAIK,UAAWC,IAAOE,UAAtB,uBAA4CP,EAA5C,OACA,qBAAII,UAAWC,IAAOE,UAAtB,iBAAsCN,EAAtC,OACA,qBAAIG,UAAWC,IAAOE,UAAtB,oBAAyCL,EAAzC,OACA,qBAAIE,UAAWC,IAAOE,UAAtB,iCAAsDJ,EAAtD,W,gBCGSK,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACER,UAAWC,IAAOQ,YAElBC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAHIA,O,gBCWIG,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASb,UAAWc,IAAMC,QAA1B,UACE,oBAAIf,UAAWc,IAAMF,MAArB,SAA6BA,IAC5BC,M,gBCIQG,EARO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,mBAAGjB,UAAWc,IAAMG,QAApB,SAA8BA,K,gBCuDxBC,MArDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNxB,EADM,KACAyB,EADA,OAEiBD,mBAAS,GAF1B,mBAENvB,EAFM,KAEGyB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNtB,EAHM,KAGDyB,EAHC,KAqBPC,EAAqB,WACzB,OAAO5B,EAAOE,EAAMD,GAMtB,OACE,sBAAKI,UAAWc,IAAMU,gBAAtB,UACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA5BY,SAAAD,GAClB,OAAQA,GACN,IAAK,OACHe,GAAQ,SAAAK,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHJ,GAAW,SAAAK,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHJ,GAAO,SAAAK,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAmBwB,IAAzBJ,IACC,cAACK,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,CAASL,MAAM,aAAf,SACE,cAACiB,EAAD,CACElC,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOyB,IACPxB,cApBD+B,KAAKC,MAAc,IAAPpC,EAAc4B,KAAwB,WC5B7DS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4634a61b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat_name\":\"Statistics_stat_name__3Bqvr\",\"stat_item\":\"Statistics_stat_item__2ckmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__13goy\",\"section\":\"Section_section__WpPZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__1ih3x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1caEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_contatiner\":\"Main_section_main_contatiner__2tgtP\"};","import styles from './Statistics.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatisticsHandler = ({ good, neutral, bad, total, totalPositive }) => {\r\n  return (\r\n    <ul className={styles.stat_name}>\r\n      <li className={styles.stat_item}>Good: {good}</li>\r\n      <li className={styles.stat_item}>Neutural: {neutral} </li>\r\n      <li className={styles.stat_item}>Bad:{bad} </li>\r\n      <li className={styles.stat_item}>Total: {total} </li>\r\n      <li className={styles.stat_item}>Positive feedback : {totalPositive}%</li>\r\n    </ul>\r\n  );\r\n};\r\nStatisticsHandler.propTypes = {\r\n  stats: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    totalPositive: PropTypes.number.isRequired,\r\n  }),\r\n};\r\nexport default StatisticsHandler;\r\n","import styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button\r\n      className={styles.feedbackBtn}\r\n      key={option}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import style from './Section.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={style.section}>\r\n      <h1 className={style.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import style from './Notification.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notifications = ({ message }) => {\r\n  return <p className={style.message}>{message}</p>;\r\n};\r\n\r\nNotifications.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notifications;\r\n","import StatisticsHandler from './Components/Statistics/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions/Feedbackoptions';\nimport Section from './Components/Section/Section';\nimport Notification from './Components/Notifictions/Notification';\nimport { useState } from 'react';\nimport style from './Main_section.module.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const AddFeedback = options => {\n    switch (options) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback() || 0);\n  };\n\n  return (\n    <div className={style.main_contatiner}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={AddFeedback}\n        />\n      </Section>\n      {countTotalFeedback() === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Section title=\"Statistics\">\n          <StatisticsHandler\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            total={countTotalFeedback()}\n            totalPositive={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}